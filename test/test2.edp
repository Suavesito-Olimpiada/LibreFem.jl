LFNew(int,i);
LFNew(real,f);
LFNew(complex,c);

int n = 3;
int m = 5;
LFNewV(real,arr,n);
LFNewM(real,mat,n,m);

LFInit();


LFWait();  // 1
LFRead("i", i);
LFRead("f", f);
LFRead("c", c);

cout << "[FF]: (read) i = " << i << endl;
cout << "[FF]: (read) f = " << f << endl;
cout << "[FF]: (read) c = " << c << endl;

i = i + i;
f = f * f;
c = c^2;

cout << "[FF]: (write) i = " << i << endl;
cout << "[FF]: (write) f = " << f << endl;
cout << "[FF]: (write) c = " << c << endl;

LFWrite("c", c);
LFWrite("i", i);
LFWrite("f", f);
// FreeFEM side (semff) already sent the data
LFPost();  // 2
LFWait();  // 3


for (int i = 0; i < n; ++i)
    arr(i) = i;


for (int i = 0; i < n; ++i)
    for (int j = 0; j < m; ++j)
        mat(i,j) = (i-j)*(i+j+2);


cout << "[FF]: (write) arr = " << arr << endl;
cout << "[FF]: (write) mat = " << mat << endl;

LFWriteV("arr", arr);
LFWriteM("mat", mat);
LFPost();  // 4

LFWait();  // 5
LFReadV("arr", arr);
LFReadM("mat", mat);

cout << "[FF]: (read) arr = " << arr << endl;
cout << "[FF]: (read) mat = " << mat << endl;
